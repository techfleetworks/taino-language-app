/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@smithy+hash-stream-node@3.1.9";
exports.ids = ["vendor-chunks/@smithy+hash-stream-node@3.1.9"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@smithy+hash-stream-node@3.1.9/node_modules/@smithy/hash-stream-node/dist-cjs/index.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@smithy+hash-stream-node@3.1.9/node_modules/@smithy/hash-stream-node/dist-cjs/index.js ***!
  \*******************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  fileStreamHasher: () => fileStreamHasher,\n  readableStreamHasher: () => readableStreamHasher\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/fileStreamHasher.ts\nvar import_fs = __webpack_require__(/*! fs */ \"fs\");\n\n// src/HashCalculator.ts\nvar import_util_utf8 = __webpack_require__(/*! @smithy/util-utf8 */ \"(rsc)/./node_modules/.pnpm/@smithy+util-utf8@3.0.0/node_modules/@smithy/util-utf8/dist-es/index.js\");\nvar import_stream = __webpack_require__(/*! stream */ \"stream\");\nvar _HashCalculator = class _HashCalculator extends import_stream.Writable {\n  constructor(hash, options) {\n    super(options);\n    this.hash = hash;\n  }\n  _write(chunk, encoding, callback) {\n    try {\n      this.hash.update((0, import_util_utf8.toUint8Array)(chunk));\n    } catch (err) {\n      return callback(err);\n    }\n    callback();\n  }\n};\n__name(_HashCalculator, \"HashCalculator\");\nvar HashCalculator = _HashCalculator;\n\n// src/fileStreamHasher.ts\nvar fileStreamHasher = /* @__PURE__ */ __name((hashCtor, fileStream) => new Promise((resolve, reject) => {\n  if (!isReadStream(fileStream)) {\n    reject(new Error(\"Unable to calculate hash for non-file streams.\"));\n    return;\n  }\n  const fileStreamTee = (0, import_fs.createReadStream)(fileStream.path, {\n    start: fileStream.start,\n    end: fileStream.end\n  });\n  const hash = new hashCtor();\n  const hashCalculator = new HashCalculator(hash);\n  fileStreamTee.pipe(hashCalculator);\n  fileStreamTee.on(\"error\", (err) => {\n    hashCalculator.end();\n    reject(err);\n  });\n  hashCalculator.on(\"error\", reject);\n  hashCalculator.on(\"finish\", function() {\n    hash.digest().then(resolve).catch(reject);\n  });\n}), \"fileStreamHasher\");\nvar isReadStream = /* @__PURE__ */ __name((stream) => typeof stream.path === \"string\", \"isReadStream\");\n\n// src/readableStreamHasher.ts\nvar readableStreamHasher = /* @__PURE__ */ __name((hashCtor, readableStream) => {\n  if (readableStream.readableFlowing !== null) {\n    throw new Error(\"Unable to calculate hash for flowing readable stream\");\n  }\n  const hash = new hashCtor();\n  const hashCalculator = new HashCalculator(hash);\n  readableStream.pipe(hashCalculator);\n  return new Promise((resolve, reject) => {\n    readableStream.on(\"error\", (err) => {\n      hashCalculator.end();\n      reject(err);\n    });\n    hashCalculator.on(\"error\", reject);\n    hashCalculator.on(\"finish\", () => {\n      hash.digest().then(resolve).catch(reject);\n    });\n  });\n}, \"readableStreamHasher\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (0);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNtaXRoeStoYXNoLXN0cmVhbS1ub2RlQDMuMS45L25vZGVfbW9kdWxlcy9Ac21pdGh5L2hhc2gtc3RyZWFtLW5vZGUvZGlzdC1janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsMkJBQTJCO0FBQ3ZGO0FBQ0E7QUFDQSw4QkFBOEIsa0NBQWtDO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsNEZBQTRGO0FBQ3pIO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxrQkFBa0IsYUFBYTs7QUFFbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDs7QUFFQTtBQUNBLGdCQUFnQixtQkFBTyxDQUFDLGNBQUk7O0FBRTVCO0FBQ0EsdUJBQXVCLG1CQUFPLENBQUMsNkhBQW1CO0FBQ2xELG9CQUFvQixtQkFBTyxDQUFDLHNCQUFRO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNILENBQUM7QUFDRDs7QUFFQSxNQUFNLENBR0wiLCJzb3VyY2VzIjpbIi9Vc2Vycy9rYXJlbGxlL3ZzY3Byb2plY3RzL3RlY2gtZmxlZXQvdGFpbm8tbGFuZ3VhZ2UtYXBwL2xlc3Nvbi1hdXRob3Jpbmcvbm9kZV9tb2R1bGVzLy5wbnBtL0BzbWl0aHkraGFzaC1zdHJlYW0tbm9kZUAzLjEuOS9ub2RlX21vZHVsZXMvQHNtaXRoeS9oYXNoLXN0cmVhbS1ub2RlL2Rpc3QtY2pzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19nZXRPd25Qcm9wRGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgX19nZXRPd25Qcm9wTmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBfX2hhc093blByb3AgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIF9fbmFtZSA9ICh0YXJnZXQsIHZhbHVlKSA9PiBfX2RlZlByb3AodGFyZ2V0LCBcIm5hbWVcIiwgeyB2YWx1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0pO1xudmFyIF9fZXhwb3J0ID0gKHRhcmdldCwgYWxsKSA9PiB7XG4gIGZvciAodmFyIG5hbWUgaW4gYWxsKVxuICAgIF9fZGVmUHJvcCh0YXJnZXQsIG5hbWUsIHsgZ2V0OiBhbGxbbmFtZV0sIGVudW1lcmFibGU6IHRydWUgfSk7XG59O1xudmFyIF9fY29weVByb3BzID0gKHRvLCBmcm9tLCBleGNlcHQsIGRlc2MpID0+IHtcbiAgaWYgKGZyb20gJiYgdHlwZW9mIGZyb20gPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGZyb20gPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGZvciAobGV0IGtleSBvZiBfX2dldE93blByb3BOYW1lcyhmcm9tKSlcbiAgICAgIGlmICghX19oYXNPd25Qcm9wLmNhbGwodG8sIGtleSkgJiYga2V5ICE9PSBleGNlcHQpXG4gICAgICAgIF9fZGVmUHJvcCh0bywga2V5LCB7IGdldDogKCkgPT4gZnJvbVtrZXldLCBlbnVtZXJhYmxlOiAhKGRlc2MgPSBfX2dldE93blByb3BEZXNjKGZyb20sIGtleSkpIHx8IGRlc2MuZW51bWVyYWJsZSB9KTtcbiAgfVxuICByZXR1cm4gdG87XG59O1xudmFyIF9fdG9Db21tb25KUyA9IChtb2QpID0+IF9fY29weVByb3BzKF9fZGVmUHJvcCh7fSwgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSksIG1vZCk7XG5cbi8vIHNyYy9pbmRleC50c1xudmFyIHNyY19leHBvcnRzID0ge307XG5fX2V4cG9ydChzcmNfZXhwb3J0cywge1xuICBmaWxlU3RyZWFtSGFzaGVyOiAoKSA9PiBmaWxlU3RyZWFtSGFzaGVyLFxuICByZWFkYWJsZVN0cmVhbUhhc2hlcjogKCkgPT4gcmVhZGFibGVTdHJlYW1IYXNoZXJcbn0pO1xubW9kdWxlLmV4cG9ydHMgPSBfX3RvQ29tbW9uSlMoc3JjX2V4cG9ydHMpO1xuXG4vLyBzcmMvZmlsZVN0cmVhbUhhc2hlci50c1xudmFyIGltcG9ydF9mcyA9IHJlcXVpcmUoXCJmc1wiKTtcblxuLy8gc3JjL0hhc2hDYWxjdWxhdG9yLnRzXG52YXIgaW1wb3J0X3V0aWxfdXRmOCA9IHJlcXVpcmUoXCJAc21pdGh5L3V0aWwtdXRmOFwiKTtcbnZhciBpbXBvcnRfc3RyZWFtID0gcmVxdWlyZShcInN0cmVhbVwiKTtcbnZhciBfSGFzaENhbGN1bGF0b3IgPSBjbGFzcyBfSGFzaENhbGN1bGF0b3IgZXh0ZW5kcyBpbXBvcnRfc3RyZWFtLldyaXRhYmxlIHtcbiAgY29uc3RydWN0b3IoaGFzaCwgb3B0aW9ucykge1xuICAgIHN1cGVyKG9wdGlvbnMpO1xuICAgIHRoaXMuaGFzaCA9IGhhc2g7XG4gIH1cbiAgX3dyaXRlKGNodW5rLCBlbmNvZGluZywgY2FsbGJhY2spIHtcbiAgICB0cnkge1xuICAgICAgdGhpcy5oYXNoLnVwZGF0ZSgoMCwgaW1wb3J0X3V0aWxfdXRmOC50b1VpbnQ4QXJyYXkpKGNodW5rKSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICByZXR1cm4gY2FsbGJhY2soZXJyKTtcbiAgICB9XG4gICAgY2FsbGJhY2soKTtcbiAgfVxufTtcbl9fbmFtZShfSGFzaENhbGN1bGF0b3IsIFwiSGFzaENhbGN1bGF0b3JcIik7XG52YXIgSGFzaENhbGN1bGF0b3IgPSBfSGFzaENhbGN1bGF0b3I7XG5cbi8vIHNyYy9maWxlU3RyZWFtSGFzaGVyLnRzXG52YXIgZmlsZVN0cmVhbUhhc2hlciA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKGhhc2hDdG9yLCBmaWxlU3RyZWFtKSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gIGlmICghaXNSZWFkU3RyZWFtKGZpbGVTdHJlYW0pKSB7XG4gICAgcmVqZWN0KG5ldyBFcnJvcihcIlVuYWJsZSB0byBjYWxjdWxhdGUgaGFzaCBmb3Igbm9uLWZpbGUgc3RyZWFtcy5cIikpO1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBmaWxlU3RyZWFtVGVlID0gKDAsIGltcG9ydF9mcy5jcmVhdGVSZWFkU3RyZWFtKShmaWxlU3RyZWFtLnBhdGgsIHtcbiAgICBzdGFydDogZmlsZVN0cmVhbS5zdGFydCxcbiAgICBlbmQ6IGZpbGVTdHJlYW0uZW5kXG4gIH0pO1xuICBjb25zdCBoYXNoID0gbmV3IGhhc2hDdG9yKCk7XG4gIGNvbnN0IGhhc2hDYWxjdWxhdG9yID0gbmV3IEhhc2hDYWxjdWxhdG9yKGhhc2gpO1xuICBmaWxlU3RyZWFtVGVlLnBpcGUoaGFzaENhbGN1bGF0b3IpO1xuICBmaWxlU3RyZWFtVGVlLm9uKFwiZXJyb3JcIiwgKGVycikgPT4ge1xuICAgIGhhc2hDYWxjdWxhdG9yLmVuZCgpO1xuICAgIHJlamVjdChlcnIpO1xuICB9KTtcbiAgaGFzaENhbGN1bGF0b3Iub24oXCJlcnJvclwiLCByZWplY3QpO1xuICBoYXNoQ2FsY3VsYXRvci5vbihcImZpbmlzaFwiLCBmdW5jdGlvbigpIHtcbiAgICBoYXNoLmRpZ2VzdCgpLnRoZW4ocmVzb2x2ZSkuY2F0Y2gocmVqZWN0KTtcbiAgfSk7XG59KSwgXCJmaWxlU3RyZWFtSGFzaGVyXCIpO1xudmFyIGlzUmVhZFN0cmVhbSA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKHN0cmVhbSkgPT4gdHlwZW9mIHN0cmVhbS5wYXRoID09PSBcInN0cmluZ1wiLCBcImlzUmVhZFN0cmVhbVwiKTtcblxuLy8gc3JjL3JlYWRhYmxlU3RyZWFtSGFzaGVyLnRzXG52YXIgcmVhZGFibGVTdHJlYW1IYXNoZXIgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChoYXNoQ3RvciwgcmVhZGFibGVTdHJlYW0pID0+IHtcbiAgaWYgKHJlYWRhYmxlU3RyZWFtLnJlYWRhYmxlRmxvd2luZyAhPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byBjYWxjdWxhdGUgaGFzaCBmb3IgZmxvd2luZyByZWFkYWJsZSBzdHJlYW1cIik7XG4gIH1cbiAgY29uc3QgaGFzaCA9IG5ldyBoYXNoQ3RvcigpO1xuICBjb25zdCBoYXNoQ2FsY3VsYXRvciA9IG5ldyBIYXNoQ2FsY3VsYXRvcihoYXNoKTtcbiAgcmVhZGFibGVTdHJlYW0ucGlwZShoYXNoQ2FsY3VsYXRvcik7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgcmVhZGFibGVTdHJlYW0ub24oXCJlcnJvclwiLCAoZXJyKSA9PiB7XG4gICAgICBoYXNoQ2FsY3VsYXRvci5lbmQoKTtcbiAgICAgIHJlamVjdChlcnIpO1xuICAgIH0pO1xuICAgIGhhc2hDYWxjdWxhdG9yLm9uKFwiZXJyb3JcIiwgcmVqZWN0KTtcbiAgICBoYXNoQ2FsY3VsYXRvci5vbihcImZpbmlzaFwiLCAoKSA9PiB7XG4gICAgICBoYXNoLmRpZ2VzdCgpLnRoZW4ocmVzb2x2ZSkuY2F0Y2gocmVqZWN0KTtcbiAgICB9KTtcbiAgfSk7XG59LCBcInJlYWRhYmxlU3RyZWFtSGFzaGVyXCIpO1xuLy8gQW5ub3RhdGUgdGhlIENvbW1vbkpTIGV4cG9ydCBuYW1lcyBmb3IgRVNNIGltcG9ydCBpbiBub2RlOlxuXG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgZmlsZVN0cmVhbUhhc2hlcixcbiAgcmVhZGFibGVTdHJlYW1IYXNoZXJcbn0pO1xuXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@smithy+hash-stream-node@3.1.9/node_modules/@smithy/hash-stream-node/dist-cjs/index.js\n");

/***/ })

};
;