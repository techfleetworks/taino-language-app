"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@payloadcms+db-postgres@3.0.0_payload@3.0.0_graphql@16.9.0_monaco-editor@0.52.0_react-dom@19._6zzikn24pq2ll3gsw35bch2lla";
exports.ids = ["vendor-chunks/@payloadcms+db-postgres@3.0.0_payload@3.0.0_graphql@16.9.0_monaco-editor@0.52.0_react-dom@19._6zzikn24pq2ll3gsw35bch2lla"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@payloadcms+db-postgres@3.0.0_payload@3.0.0_graphql@16.9.0_monaco-editor@0.52.0_react-dom@19._6zzikn24pq2ll3gsw35bch2lla/node_modules/@payloadcms/db-postgres/dist/connect.js":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@payloadcms+db-postgres@3.0.0_payload@3.0.0_graphql@16.9.0_monaco-editor@0.52.0_react-dom@19._6zzikn24pq2ll3gsw35bch2lla/node_modules/@payloadcms/db-postgres/dist/connect.js ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connect: () => (/* binding */ connect)\n/* harmony export */ });\n/* harmony import */ var _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @payloadcms/drizzle */ \"(rsc)/./node_modules/.pnpm/@payloadcms+drizzle@3.0.0_@types+pg@8.10.2_payload@3.0.0_graphql@16.9.0_monaco-editor@0.52.0__tqdpgdl2cd2eewydeg3opjsyqe/node_modules/@payloadcms/drizzle/dist/index.js\");\n/* harmony import */ var drizzle_orm_node_postgres__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! drizzle-orm/node-postgres */ \"(rsc)/./node_modules/.pnpm/drizzle-orm@0.36.1_@types+pg@8.10.2_pg@8.11.3_react@19.0.0-rc-65a56d0e-20241020_types-react@19.0.0-rc.1/node_modules/drizzle-orm/node-postgres/driver.js\");\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pg */ \"(rsc)/./node_modules/.pnpm/pg@8.11.3/node_modules/pg/lib/index.js\");\n\n\n\nconst connectWithReconnect = async function({ adapter, payload, reconnect = false }) {\n    let result;\n    if (!reconnect) {\n        result = await adapter.pool.connect();\n    } else {\n        try {\n            result = await adapter.pool.connect();\n        } catch (ignore) {\n            setTimeout(()=>{\n                payload.logger.info('Reconnecting to postgres');\n                void connectWithReconnect({\n                    adapter,\n                    payload,\n                    reconnect: true\n                });\n            }, 1000);\n        }\n    }\n    if (!result) {\n        return;\n    }\n    result.prependListener('error', (err)=>{\n        try {\n            if (err.code === 'ECONNRESET') {\n                void connectWithReconnect({\n                    adapter,\n                    payload,\n                    reconnect: true\n                });\n            }\n        } catch (ignore) {\n        // swallow error\n        }\n    });\n};\nconst connect = async function connect(options = {\n    hotReload: false\n}) {\n    const { hotReload } = options;\n    this.schema = {\n        pgSchema: this.pgSchema,\n        ...this.tables,\n        ...this.relations,\n        ...this.enums\n    };\n    try {\n        if (!this.pool) {\n            this.pool = new pg__WEBPACK_IMPORTED_MODULE_1__.Pool(this.poolOptions);\n            await connectWithReconnect({\n                adapter: this,\n                payload: this.payload\n            });\n        }\n        const logger = this.logger || false;\n        this.drizzle = (0,drizzle_orm_node_postgres__WEBPACK_IMPORTED_MODULE_2__.drizzle)({\n            client: this.pool,\n            logger,\n            schema: this.schema\n        });\n        if (!hotReload) {\n            if (process.env.PAYLOAD_DROP_DATABASE === 'true') {\n                this.payload.logger.info(`---- DROPPING TABLES SCHEMA(${this.schemaName || 'public'}) ----`);\n                await this.dropDatabase({\n                    adapter: this\n                });\n                this.payload.logger.info('---- DROPPED TABLES ----');\n            }\n        }\n    } catch (err) {\n        if (err.message?.match(/database .* does not exist/i) && !this.disableCreateDatabase) {\n            // capitalize first char of the err msg\n            this.payload.logger.info(`${err.message.charAt(0).toUpperCase() + err.message.slice(1)}, creating...`);\n            const isCreated = await this.createDatabase();\n            if (isCreated) {\n                await this.connect(options);\n                return;\n            }\n        } else {\n            this.payload.logger.error({\n                err,\n                msg: `Error: cannot connect to Postgres. Details: ${err.message}`\n            });\n        }\n        if (typeof this.rejectInitializing === 'function') {\n            this.rejectInitializing();\n        }\n        process.exit(1);\n    }\n    await this.createExtensions();\n    // Only push schema if not in production\n    if ( true && process.env.PAYLOAD_MIGRATING !== 'true' && this.push !== false) {\n        await (0,_payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.pushDevSchema)(this);\n    }\n    if (typeof this.resolveInitializing === 'function') {\n        this.resolveInitializing();\n    }\n    if (false) {}\n};\n\n//# sourceMappingURL=connect.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHBheWxvYWRjbXMrZGItcG9zdGdyZXNAMy4wLjBfcGF5bG9hZEAzLjAuMF9ncmFwaHFsQDE2LjkuMF9tb25hY28tZWRpdG9yQDAuNTIuMF9yZWFjdC1kb21AMTkuXzZ6emlrbjI0cHEybGwzZ3N3MzViY2gybGxhL25vZGVfbW9kdWxlcy9AcGF5bG9hZGNtcy9kYi1wb3N0Z3Jlcy9kaXN0L2Nvbm5lY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDtBQUNBO0FBQ2hDO0FBQ3BCLDhDQUE4QyxxQ0FBcUM7QUFDbkY7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQSxDQUFDO0FBQ0QsWUFBWSxZQUFZO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsb0NBQU87QUFDbkM7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSx1QkFBdUIsa0VBQU87QUFDOUI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSx3RUFBd0UsNEJBQTRCO0FBQ3BHO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSx3Q0FBd0MsMkRBQTJEO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLG9FQUFvRSxZQUFZO0FBQ2hGLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxLQUFxQztBQUM3QyxjQUFjLGtFQUFhO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxLQUE0RCxFQUFFLEVBSWpFO0FBQ0w7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZXNzb24tYXV0aG9yaW5nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BwYXlsb2FkY21zK2RiLXBvc3RncmVzQDMuMC4wX3BheWxvYWRAMy4wLjBfZ3JhcGhxbEAxNi45LjBfbW9uYWNvLWVkaXRvckAwLjUyLjBfcmVhY3QtZG9tQDE5Ll82enppa24yNHBxMmxsM2dzdzM1YmNoMmxsYS9ub2RlX21vZHVsZXMvQHBheWxvYWRjbXMvZGItcG9zdGdyZXMvZGlzdC9jb25uZWN0LmpzP2FjZTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHVzaERldlNjaGVtYSB9IGZyb20gJ0BwYXlsb2FkY21zL2RyaXp6bGUnO1xuaW1wb3J0IHsgZHJpenpsZSB9IGZyb20gJ2RyaXp6bGUtb3JtL25vZGUtcG9zdGdyZXMnO1xuaW1wb3J0IHBnIGZyb20gJ3BnJztcbmNvbnN0IGNvbm5lY3RXaXRoUmVjb25uZWN0ID0gYXN5bmMgZnVuY3Rpb24oeyBhZGFwdGVyLCBwYXlsb2FkLCByZWNvbm5lY3QgPSBmYWxzZSB9KSB7XG4gICAgbGV0IHJlc3VsdDtcbiAgICBpZiAoIXJlY29ubmVjdCkge1xuICAgICAgICByZXN1bHQgPSBhd2FpdCBhZGFwdGVyLnBvb2wuY29ubmVjdCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXN1bHQgPSBhd2FpdCBhZGFwdGVyLnBvb2wuY29ubmVjdCgpO1xuICAgICAgICB9IGNhdGNoIChpZ25vcmUpIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCk9PntcbiAgICAgICAgICAgICAgICBwYXlsb2FkLmxvZ2dlci5pbmZvKCdSZWNvbm5lY3RpbmcgdG8gcG9zdGdyZXMnKTtcbiAgICAgICAgICAgICAgICB2b2lkIGNvbm5lY3RXaXRoUmVjb25uZWN0KHtcbiAgICAgICAgICAgICAgICAgICAgYWRhcHRlcixcbiAgICAgICAgICAgICAgICAgICAgcGF5bG9hZCxcbiAgICAgICAgICAgICAgICAgICAgcmVjb25uZWN0OiB0cnVlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LCAxMDAwKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoIXJlc3VsdCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHJlc3VsdC5wcmVwZW5kTGlzdGVuZXIoJ2Vycm9yJywgKGVycik9PntcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChlcnIuY29kZSA9PT0gJ0VDT05OUkVTRVQnKSB7XG4gICAgICAgICAgICAgICAgdm9pZCBjb25uZWN0V2l0aFJlY29ubmVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGFkYXB0ZXIsXG4gICAgICAgICAgICAgICAgICAgIHBheWxvYWQsXG4gICAgICAgICAgICAgICAgICAgIHJlY29ubmVjdDogdHJ1ZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChpZ25vcmUpIHtcbiAgICAgICAgLy8gc3dhbGxvdyBlcnJvclxuICAgICAgICB9XG4gICAgfSk7XG59O1xuZXhwb3J0IGNvbnN0IGNvbm5lY3QgPSBhc3luYyBmdW5jdGlvbiBjb25uZWN0KG9wdGlvbnMgPSB7XG4gICAgaG90UmVsb2FkOiBmYWxzZVxufSkge1xuICAgIGNvbnN0IHsgaG90UmVsb2FkIH0gPSBvcHRpb25zO1xuICAgIHRoaXMuc2NoZW1hID0ge1xuICAgICAgICBwZ1NjaGVtYTogdGhpcy5wZ1NjaGVtYSxcbiAgICAgICAgLi4udGhpcy50YWJsZXMsXG4gICAgICAgIC4uLnRoaXMucmVsYXRpb25zLFxuICAgICAgICAuLi50aGlzLmVudW1zXG4gICAgfTtcbiAgICB0cnkge1xuICAgICAgICBpZiAoIXRoaXMucG9vbCkge1xuICAgICAgICAgICAgdGhpcy5wb29sID0gbmV3IHBnLlBvb2wodGhpcy5wb29sT3B0aW9ucyk7XG4gICAgICAgICAgICBhd2FpdCBjb25uZWN0V2l0aFJlY29ubmVjdCh7XG4gICAgICAgICAgICAgICAgYWRhcHRlcjogdGhpcyxcbiAgICAgICAgICAgICAgICBwYXlsb2FkOiB0aGlzLnBheWxvYWRcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGxvZ2dlciA9IHRoaXMubG9nZ2VyIHx8IGZhbHNlO1xuICAgICAgICB0aGlzLmRyaXp6bGUgPSBkcml6emxlKHtcbiAgICAgICAgICAgIGNsaWVudDogdGhpcy5wb29sLFxuICAgICAgICAgICAgbG9nZ2VyLFxuICAgICAgICAgICAgc2NoZW1hOiB0aGlzLnNjaGVtYVxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKCFob3RSZWxvYWQpIHtcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5QQVlMT0FEX0RST1BfREFUQUJBU0UgPT09ICd0cnVlJykge1xuICAgICAgICAgICAgICAgIHRoaXMucGF5bG9hZC5sb2dnZXIuaW5mbyhgLS0tLSBEUk9QUElORyBUQUJMRVMgU0NIRU1BKCR7dGhpcy5zY2hlbWFOYW1lIHx8ICdwdWJsaWMnfSkgLS0tLWApO1xuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuZHJvcERhdGFiYXNlKHtcbiAgICAgICAgICAgICAgICAgICAgYWRhcHRlcjogdGhpc1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMucGF5bG9hZC5sb2dnZXIuaW5mbygnLS0tLSBEUk9QUEVEIFRBQkxFUyAtLS0tJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgaWYgKGVyci5tZXNzYWdlPy5tYXRjaCgvZGF0YWJhc2UgLiogZG9lcyBub3QgZXhpc3QvaSkgJiYgIXRoaXMuZGlzYWJsZUNyZWF0ZURhdGFiYXNlKSB7XG4gICAgICAgICAgICAvLyBjYXBpdGFsaXplIGZpcnN0IGNoYXIgb2YgdGhlIGVyciBtc2dcbiAgICAgICAgICAgIHRoaXMucGF5bG9hZC5sb2dnZXIuaW5mbyhgJHtlcnIubWVzc2FnZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIGVyci5tZXNzYWdlLnNsaWNlKDEpfSwgY3JlYXRpbmcuLi5gKTtcbiAgICAgICAgICAgIGNvbnN0IGlzQ3JlYXRlZCA9IGF3YWl0IHRoaXMuY3JlYXRlRGF0YWJhc2UoKTtcbiAgICAgICAgICAgIGlmIChpc0NyZWF0ZWQpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmNvbm5lY3Qob3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5wYXlsb2FkLmxvZ2dlci5lcnJvcih7XG4gICAgICAgICAgICAgICAgZXJyLFxuICAgICAgICAgICAgICAgIG1zZzogYEVycm9yOiBjYW5ub3QgY29ubmVjdCB0byBQb3N0Z3Jlcy4gRGV0YWlsczogJHtlcnIubWVzc2FnZX1gXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHRoaXMucmVqZWN0SW5pdGlhbGl6aW5nID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICB0aGlzLnJlamVjdEluaXRpYWxpemluZygpO1xuICAgICAgICB9XG4gICAgICAgIHByb2Nlc3MuZXhpdCgxKTtcbiAgICB9XG4gICAgYXdhaXQgdGhpcy5jcmVhdGVFeHRlbnNpb25zKCk7XG4gICAgLy8gT25seSBwdXNoIHNjaGVtYSBpZiBub3QgaW4gcHJvZHVjdGlvblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHByb2Nlc3MuZW52LlBBWUxPQURfTUlHUkFUSU5HICE9PSAndHJ1ZScgJiYgdGhpcy5wdXNoICE9PSBmYWxzZSkge1xuICAgICAgICBhd2FpdCBwdXNoRGV2U2NoZW1hKHRoaXMpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHRoaXMucmVzb2x2ZUluaXRpYWxpemluZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0aGlzLnJlc29sdmVJbml0aWFsaXppbmcoKTtcbiAgICB9XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgJiYgdGhpcy5wcm9kTWlncmF0aW9ucykge1xuICAgICAgICBhd2FpdCB0aGlzLm1pZ3JhdGUoe1xuICAgICAgICAgICAgbWlncmF0aW9uczogdGhpcy5wcm9kTWlncmF0aW9uc1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25uZWN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@payloadcms+db-postgres@3.0.0_payload@3.0.0_graphql@16.9.0_monaco-editor@0.52.0_react-dom@19._6zzikn24pq2ll3gsw35bch2lla/node_modules/@payloadcms/db-postgres/dist/connect.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@payloadcms+db-postgres@3.0.0_payload@3.0.0_graphql@16.9.0_monaco-editor@0.52.0_react-dom@19._6zzikn24pq2ll3gsw35bch2lla/node_modules/@payloadcms/db-postgres/dist/index.js":
/*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@payloadcms+db-postgres@3.0.0_payload@3.0.0_graphql@16.9.0_monaco-editor@0.52.0_react-dom@19._6zzikn24pq2ll3gsw35bch2lla/node_modules/@payloadcms/db-postgres/dist/index.js ***!
  \********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   postgresAdapter: () => (/* binding */ postgresAdapter),\n/* harmony export */   sql: () => (/* reexport safe */ drizzle_orm__WEBPACK_IMPORTED_MODULE_10__.sql)\n/* harmony export */ });\n/* harmony import */ var _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @payloadcms/drizzle */ \"(rsc)/./node_modules/.pnpm/@payloadcms+drizzle@3.0.0_@types+pg@8.10.2_payload@3.0.0_graphql@16.9.0_monaco-editor@0.52.0__tqdpgdl2cd2eewydeg3opjsyqe/node_modules/@payloadcms/drizzle/dist/index.js\");\n/* harmony import */ var _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @payloadcms/drizzle/postgres */ \"(rsc)/./node_modules/.pnpm/@payloadcms+drizzle@3.0.0_@types+pg@8.10.2_payload@3.0.0_graphql@16.9.0_monaco-editor@0.52.0__tqdpgdl2cd2eewydeg3opjsyqe/node_modules/@payloadcms/drizzle/dist/exports/postgres.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/.pnpm/drizzle-orm@0.36.1_@types+pg@8.10.2_pg@8.11.3_react@19.0.0-rc-65a56d0e-20241020_types-react@19.0.0-rc.1/node_modules/drizzle-orm/pg-core/schema.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/.pnpm/drizzle-orm@0.36.1_@types+pg@8.10.2_pg@8.11.3_react@19.0.0-rc-65a56d0e-20241020_types-react@19.0.0-rc.1/node_modules/drizzle-orm/pg-core/columns/enum.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/.pnpm/drizzle-orm@0.36.1_@types+pg@8.10.2_pg@8.11.3_react@19.0.0-rc-65a56d0e-20241020_types-react@19.0.0-rc.1/node_modules/drizzle-orm/pg-core/table.js\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var payload__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! payload */ \"(rsc)/./node_modules/.pnpm/payload@3.0.0_graphql@16.9.0_monaco-editor@0.52.0_react-dom@19.0.0-rc-65a56d0e-20241020_react_lrod6vkvhjtrcuu6q4aigpsz7y/node_modules/payload/dist/database/createDatabaseAdapter.js\");\n/* harmony import */ var payload__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! payload */ \"(rsc)/./node_modules/.pnpm/payload@3.0.0_graphql@16.9.0_monaco-editor@0.52.0_react-dom@19.0.0-rc-65a56d0e-20241020_react_lrod6vkvhjtrcuu6q4aigpsz7y/node_modules/payload/dist/database/defaultBeginTransaction.js\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var _connect_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./connect.js */ \"(rsc)/./node_modules/.pnpm/@payloadcms+db-postgres@3.0.0_payload@3.0.0_graphql@16.9.0_monaco-editor@0.52.0_react-dom@19._6zzikn24pq2ll3gsw35bch2lla/node_modules/@payloadcms/db-postgres/dist/connect.js\");\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! drizzle-orm */ \"(rsc)/./node_modules/.pnpm/drizzle-orm@0.36.1_@types+pg@8.10.2_pg@8.11.3_react@19.0.0-rc-65a56d0e-20241020_types-react@19.0.0-rc.1/node_modules/drizzle-orm/sql/sql.js\");\n\n\n\n\n\n\n\nconst filename = (0,url__WEBPACK_IMPORTED_MODULE_3__.fileURLToPath)(\"file:///Users/karelle/vscprojects/tech-fleet/taino-language-app/lesson-authoring/node_modules/.pnpm/@payloadcms+db-postgres@3.0.0_payload@3.0.0_graphql@16.9.0_monaco-editor@0.52.0_react-dom@19._6zzikn24pq2ll3gsw35bch2lla/node_modules/@payloadcms/db-postgres/dist/index.js\");\nconst dirname = path__WEBPACK_IMPORTED_MODULE_2__.dirname(filename);\nfunction postgresAdapter(args) {\n    const postgresIDType = args.idType || 'serial';\n    const payloadIDType = postgresIDType === 'serial' ? 'number' : 'text';\n    function adapter({ payload }) {\n        const migrationDir = (0,_payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.findMigrationDir)(args.migrationDir);\n        let resolveInitializing;\n        let rejectInitializing;\n        let adapterSchema;\n        const initializing = new Promise((res, rej)=>{\n            resolveInitializing = res;\n            rejectInitializing = rej;\n        });\n        if (args.schemaName) {\n            adapterSchema = (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_5__.pgSchema)(args.schemaName);\n        } else {\n            adapterSchema = {\n                enum: drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_6__.pgEnum,\n                table: drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_7__.pgTable\n            };\n        }\n        const extensions = (args.extensions ?? []).reduce((acc, name)=>{\n            acc[name] = true;\n            return acc;\n        }, {});\n        return (0,payload__WEBPACK_IMPORTED_MODULE_8__.createDatabaseAdapter)({\n            name: 'postgres',\n            afterSchemaInit: args.afterSchemaInit ?? [],\n            beforeSchemaInit: args.beforeSchemaInit ?? [],\n            createDatabase: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.createDatabase,\n            createExtensions: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.createExtensions,\n            createMigration (args) {\n                return _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.createMigration.bind(this)({\n                    ...args,\n                    dirname\n                });\n            },\n            defaultDrizzleSnapshot: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.defaultDrizzleSnapshot,\n            disableCreateDatabase: args.disableCreateDatabase ?? false,\n            drizzle: undefined,\n            enums: {},\n            extensions,\n            features: {\n                json: true\n            },\n            fieldConstraints: {},\n            getMigrationTemplate: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.getMigrationTemplate,\n            idType: postgresIDType,\n            initializing,\n            localesSuffix: args.localesSuffix || '_locales',\n            logger: args.logger,\n            operators: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.operatorMap,\n            pgSchema: adapterSchema,\n            pool: undefined,\n            poolOptions: args.pool,\n            prodMigrations: args.prodMigrations,\n            push: args.push,\n            relations: {},\n            relationshipsSuffix: args.relationshipsSuffix || '_rels',\n            schema: {},\n            schemaName: args.schemaName,\n            sessions: {},\n            tableNameMap: new Map(),\n            tables: {},\n            tablesFilter: args.tablesFilter,\n            transactionOptions: args.transactionOptions || undefined,\n            versionsSuffix: args.versionsSuffix || '_v',\n            // DatabaseAdapter\n            beginTransaction: args.transactionOptions === false ? (0,payload__WEBPACK_IMPORTED_MODULE_9__.defaultBeginTransaction)() : _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.beginTransaction,\n            commitTransaction: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.commitTransaction,\n            connect: _connect_js__WEBPACK_IMPORTED_MODULE_4__.connect,\n            count: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.count,\n            countDistinct: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.countDistinct,\n            countGlobalVersions: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.countGlobalVersions,\n            countVersions: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.countVersions,\n            create: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.create,\n            createGlobal: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.createGlobal,\n            createGlobalVersion: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.createGlobalVersion,\n            createJSONQuery: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.createJSONQuery,\n            createVersion: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.createVersion,\n            defaultIDType: payloadIDType,\n            deleteMany: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.deleteMany,\n            deleteOne: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.deleteOne,\n            deleteVersions: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.deleteVersions,\n            deleteWhere: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.deleteWhere,\n            destroy: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.destroy,\n            dropDatabase: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.dropDatabase,\n            execute: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.execute,\n            find: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.find,\n            findGlobal: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.findGlobal,\n            findGlobalVersions: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.findGlobalVersions,\n            findOne: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.findOne,\n            findVersions: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.findVersions,\n            indexes: new Set(),\n            init: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.init,\n            insert: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.insert,\n            migrate: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.migrate,\n            migrateDown: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.migrateDown,\n            migrateFresh: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.migrateFresh,\n            migrateRefresh: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.migrateRefresh,\n            migrateReset: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.migrateReset,\n            migrateStatus: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.migrateStatus,\n            migrationDir,\n            packageName: '@payloadcms/db-postgres',\n            payload,\n            queryDrafts: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.queryDrafts,\n            rejectInitializing,\n            requireDrizzleKit: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.requireDrizzleKit,\n            resolveInitializing,\n            rollbackTransaction: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.rollbackTransaction,\n            updateGlobal: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.updateGlobal,\n            updateGlobalVersion: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.updateGlobalVersion,\n            updateOne: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.updateOne,\n            updateVersion: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.updateVersion,\n            upsert: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.updateOne\n        });\n    }\n    return {\n        defaultIDType: payloadIDType,\n        init: adapter\n    };\n}\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@payloadcms+db-postgres@3.0.0_payload@3.0.0_graphql@16.9.0_monaco-editor@0.52.0_react-dom@19._6zzikn24pq2ll3gsw35bch2lla/node_modules/@payloadcms/db-postgres/dist/index.js\n");

/***/ })

};
;