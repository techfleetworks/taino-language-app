"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/postgres-interval@1.2.0";
exports.ids = ["vendor-chunks/postgres-interval@1.2.0"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/postgres-interval@1.2.0/node_modules/postgres-interval/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/postgres-interval@1.2.0/node_modules/postgres-interval/index.js ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar extend = __webpack_require__(/*! xtend/mutable */ \"(rsc)/./node_modules/.pnpm/xtend@4.0.2/node_modules/xtend/mutable.js\")\n\nmodule.exports = PostgresInterval\n\nfunction PostgresInterval (raw) {\n  if (!(this instanceof PostgresInterval)) {\n    return new PostgresInterval(raw)\n  }\n  extend(this, parse(raw))\n}\nvar properties = ['seconds', 'minutes', 'hours', 'days', 'months', 'years']\nPostgresInterval.prototype.toPostgres = function () {\n  var filtered = properties.filter(this.hasOwnProperty, this)\n\n  // In addition to `properties`, we need to account for fractions of seconds.\n  if (this.milliseconds && filtered.indexOf('seconds') < 0) {\n    filtered.push('seconds')\n  }\n\n  if (filtered.length === 0) return '0'\n  return filtered\n    .map(function (property) {\n      var value = this[property] || 0\n\n      // Account for fractional part of seconds,\n      // remove trailing zeroes.\n      if (property === 'seconds' && this.milliseconds) {\n        value = (value + this.milliseconds / 1000).toFixed(6).replace(/\\.?0+$/, '')\n      }\n\n      return value + ' ' + property\n    }, this)\n    .join(' ')\n}\n\nvar propertiesISOEquivalent = {\n  years: 'Y',\n  months: 'M',\n  days: 'D',\n  hours: 'H',\n  minutes: 'M',\n  seconds: 'S'\n}\nvar dateProperties = ['years', 'months', 'days']\nvar timeProperties = ['hours', 'minutes', 'seconds']\n// according to ISO 8601\nPostgresInterval.prototype.toISOString = PostgresInterval.prototype.toISO = function () {\n  var datePart = dateProperties\n    .map(buildProperty, this)\n    .join('')\n\n  var timePart = timeProperties\n    .map(buildProperty, this)\n    .join('')\n\n  return 'P' + datePart + 'T' + timePart\n\n  function buildProperty (property) {\n    var value = this[property] || 0\n\n    // Account for fractional part of seconds,\n    // remove trailing zeroes.\n    if (property === 'seconds' && this.milliseconds) {\n      value = (value + this.milliseconds / 1000).toFixed(6).replace(/0+$/, '')\n    }\n\n    return value + propertiesISOEquivalent[property]\n  }\n}\n\nvar NUMBER = '([+-]?\\\\d+)'\nvar YEAR = NUMBER + '\\\\s+years?'\nvar MONTH = NUMBER + '\\\\s+mons?'\nvar DAY = NUMBER + '\\\\s+days?'\nvar TIME = '([+-])?([\\\\d]*):(\\\\d\\\\d):(\\\\d\\\\d)\\\\.?(\\\\d{1,6})?'\nvar INTERVAL = new RegExp([YEAR, MONTH, DAY, TIME].map(function (regexString) {\n  return '(' + regexString + ')?'\n})\n  .join('\\\\s*'))\n\n// Positions of values in regex match\nvar positions = {\n  years: 2,\n  months: 4,\n  days: 6,\n  hours: 9,\n  minutes: 10,\n  seconds: 11,\n  milliseconds: 12\n}\n// We can use negative time\nvar negatives = ['hours', 'minutes', 'seconds', 'milliseconds']\n\nfunction parseMilliseconds (fraction) {\n  // add omitted zeroes\n  var microseconds = fraction + '000000'.slice(fraction.length)\n  return parseInt(microseconds, 10) / 1000\n}\n\nfunction parse (interval) {\n  if (!interval) return {}\n  var matches = INTERVAL.exec(interval)\n  var isNegative = matches[8] === '-'\n  return Object.keys(positions)\n    .reduce(function (parsed, property) {\n      var position = positions[property]\n      var value = matches[position]\n      // no empty string\n      if (!value) return parsed\n      // milliseconds are actually microseconds (up to 6 digits)\n      // with omitted trailing zeroes.\n      value = property === 'milliseconds'\n        ? parseMilliseconds(value)\n        : parseInt(value, 10)\n      // no zeros\n      if (!value) return parsed\n      if (isNegative && ~negatives.indexOf(property)) {\n        value *= -1\n      }\n      parsed[property] = value\n      return parsed\n    }, {})\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdGdyZXMtaW50ZXJ2YWxAMS4yLjAvbm9kZV9tb2R1bGVzL3Bvc3RncmVzLWludGVydmFsL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaLGFBQWEsbUJBQU8sQ0FBQywyRkFBZTs7QUFFcEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsSUFBSTtBQUMxRDtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxJQUFJO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZXNzb24tYXV0aG9yaW5nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RncmVzLWludGVydmFsQDEuMi4wL25vZGVfbW9kdWxlcy9wb3N0Z3Jlcy1pbnRlcnZhbC9pbmRleC5qcz9kYTNmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG52YXIgZXh0ZW5kID0gcmVxdWlyZSgneHRlbmQvbXV0YWJsZScpXG5cbm1vZHVsZS5leHBvcnRzID0gUG9zdGdyZXNJbnRlcnZhbFxuXG5mdW5jdGlvbiBQb3N0Z3Jlc0ludGVydmFsIChyYXcpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFBvc3RncmVzSW50ZXJ2YWwpKSB7XG4gICAgcmV0dXJuIG5ldyBQb3N0Z3Jlc0ludGVydmFsKHJhdylcbiAgfVxuICBleHRlbmQodGhpcywgcGFyc2UocmF3KSlcbn1cbnZhciBwcm9wZXJ0aWVzID0gWydzZWNvbmRzJywgJ21pbnV0ZXMnLCAnaG91cnMnLCAnZGF5cycsICdtb250aHMnLCAneWVhcnMnXVxuUG9zdGdyZXNJbnRlcnZhbC5wcm90b3R5cGUudG9Qb3N0Z3JlcyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGZpbHRlcmVkID0gcHJvcGVydGllcy5maWx0ZXIodGhpcy5oYXNPd25Qcm9wZXJ0eSwgdGhpcylcblxuICAvLyBJbiBhZGRpdGlvbiB0byBgcHJvcGVydGllc2AsIHdlIG5lZWQgdG8gYWNjb3VudCBmb3IgZnJhY3Rpb25zIG9mIHNlY29uZHMuXG4gIGlmICh0aGlzLm1pbGxpc2Vjb25kcyAmJiBmaWx0ZXJlZC5pbmRleE9mKCdzZWNvbmRzJykgPCAwKSB7XG4gICAgZmlsdGVyZWQucHVzaCgnc2Vjb25kcycpXG4gIH1cblxuICBpZiAoZmlsdGVyZWQubGVuZ3RoID09PSAwKSByZXR1cm4gJzAnXG4gIHJldHVybiBmaWx0ZXJlZFxuICAgIC5tYXAoZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgICB2YXIgdmFsdWUgPSB0aGlzW3Byb3BlcnR5XSB8fCAwXG5cbiAgICAgIC8vIEFjY291bnQgZm9yIGZyYWN0aW9uYWwgcGFydCBvZiBzZWNvbmRzLFxuICAgICAgLy8gcmVtb3ZlIHRyYWlsaW5nIHplcm9lcy5cbiAgICAgIGlmIChwcm9wZXJ0eSA9PT0gJ3NlY29uZHMnICYmIHRoaXMubWlsbGlzZWNvbmRzKSB7XG4gICAgICAgIHZhbHVlID0gKHZhbHVlICsgdGhpcy5taWxsaXNlY29uZHMgLyAxMDAwKS50b0ZpeGVkKDYpLnJlcGxhY2UoL1xcLj8wKyQvLCAnJylcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHZhbHVlICsgJyAnICsgcHJvcGVydHlcbiAgICB9LCB0aGlzKVxuICAgIC5qb2luKCcgJylcbn1cblxudmFyIHByb3BlcnRpZXNJU09FcXVpdmFsZW50ID0ge1xuICB5ZWFyczogJ1knLFxuICBtb250aHM6ICdNJyxcbiAgZGF5czogJ0QnLFxuICBob3VyczogJ0gnLFxuICBtaW51dGVzOiAnTScsXG4gIHNlY29uZHM6ICdTJ1xufVxudmFyIGRhdGVQcm9wZXJ0aWVzID0gWyd5ZWFycycsICdtb250aHMnLCAnZGF5cyddXG52YXIgdGltZVByb3BlcnRpZXMgPSBbJ2hvdXJzJywgJ21pbnV0ZXMnLCAnc2Vjb25kcyddXG4vLyBhY2NvcmRpbmcgdG8gSVNPIDg2MDFcblBvc3RncmVzSW50ZXJ2YWwucHJvdG90eXBlLnRvSVNPU3RyaW5nID0gUG9zdGdyZXNJbnRlcnZhbC5wcm90b3R5cGUudG9JU08gPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBkYXRlUGFydCA9IGRhdGVQcm9wZXJ0aWVzXG4gICAgLm1hcChidWlsZFByb3BlcnR5LCB0aGlzKVxuICAgIC5qb2luKCcnKVxuXG4gIHZhciB0aW1lUGFydCA9IHRpbWVQcm9wZXJ0aWVzXG4gICAgLm1hcChidWlsZFByb3BlcnR5LCB0aGlzKVxuICAgIC5qb2luKCcnKVxuXG4gIHJldHVybiAnUCcgKyBkYXRlUGFydCArICdUJyArIHRpbWVQYXJ0XG5cbiAgZnVuY3Rpb24gYnVpbGRQcm9wZXJ0eSAocHJvcGVydHkpIHtcbiAgICB2YXIgdmFsdWUgPSB0aGlzW3Byb3BlcnR5XSB8fCAwXG5cbiAgICAvLyBBY2NvdW50IGZvciBmcmFjdGlvbmFsIHBhcnQgb2Ygc2Vjb25kcyxcbiAgICAvLyByZW1vdmUgdHJhaWxpbmcgemVyb2VzLlxuICAgIGlmIChwcm9wZXJ0eSA9PT0gJ3NlY29uZHMnICYmIHRoaXMubWlsbGlzZWNvbmRzKSB7XG4gICAgICB2YWx1ZSA9ICh2YWx1ZSArIHRoaXMubWlsbGlzZWNvbmRzIC8gMTAwMCkudG9GaXhlZCg2KS5yZXBsYWNlKC8wKyQvLCAnJylcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsdWUgKyBwcm9wZXJ0aWVzSVNPRXF1aXZhbGVudFtwcm9wZXJ0eV1cbiAgfVxufVxuXG52YXIgTlVNQkVSID0gJyhbKy1dP1xcXFxkKyknXG52YXIgWUVBUiA9IE5VTUJFUiArICdcXFxccyt5ZWFycz8nXG52YXIgTU9OVEggPSBOVU1CRVIgKyAnXFxcXHMrbW9ucz8nXG52YXIgREFZID0gTlVNQkVSICsgJ1xcXFxzK2RheXM/J1xudmFyIFRJTUUgPSAnKFsrLV0pPyhbXFxcXGRdKik6KFxcXFxkXFxcXGQpOihcXFxcZFxcXFxkKVxcXFwuPyhcXFxcZHsxLDZ9KT8nXG52YXIgSU5URVJWQUwgPSBuZXcgUmVnRXhwKFtZRUFSLCBNT05USCwgREFZLCBUSU1FXS5tYXAoZnVuY3Rpb24gKHJlZ2V4U3RyaW5nKSB7XG4gIHJldHVybiAnKCcgKyByZWdleFN0cmluZyArICcpPydcbn0pXG4gIC5qb2luKCdcXFxccyonKSlcblxuLy8gUG9zaXRpb25zIG9mIHZhbHVlcyBpbiByZWdleCBtYXRjaFxudmFyIHBvc2l0aW9ucyA9IHtcbiAgeWVhcnM6IDIsXG4gIG1vbnRoczogNCxcbiAgZGF5czogNixcbiAgaG91cnM6IDksXG4gIG1pbnV0ZXM6IDEwLFxuICBzZWNvbmRzOiAxMSxcbiAgbWlsbGlzZWNvbmRzOiAxMlxufVxuLy8gV2UgY2FuIHVzZSBuZWdhdGl2ZSB0aW1lXG52YXIgbmVnYXRpdmVzID0gWydob3VycycsICdtaW51dGVzJywgJ3NlY29uZHMnLCAnbWlsbGlzZWNvbmRzJ11cblxuZnVuY3Rpb24gcGFyc2VNaWxsaXNlY29uZHMgKGZyYWN0aW9uKSB7XG4gIC8vIGFkZCBvbWl0dGVkIHplcm9lc1xuICB2YXIgbWljcm9zZWNvbmRzID0gZnJhY3Rpb24gKyAnMDAwMDAwJy5zbGljZShmcmFjdGlvbi5sZW5ndGgpXG4gIHJldHVybiBwYXJzZUludChtaWNyb3NlY29uZHMsIDEwKSAvIDEwMDBcbn1cblxuZnVuY3Rpb24gcGFyc2UgKGludGVydmFsKSB7XG4gIGlmICghaW50ZXJ2YWwpIHJldHVybiB7fVxuICB2YXIgbWF0Y2hlcyA9IElOVEVSVkFMLmV4ZWMoaW50ZXJ2YWwpXG4gIHZhciBpc05lZ2F0aXZlID0gbWF0Y2hlc1s4XSA9PT0gJy0nXG4gIHJldHVybiBPYmplY3Qua2V5cyhwb3NpdGlvbnMpXG4gICAgLnJlZHVjZShmdW5jdGlvbiAocGFyc2VkLCBwcm9wZXJ0eSkge1xuICAgICAgdmFyIHBvc2l0aW9uID0gcG9zaXRpb25zW3Byb3BlcnR5XVxuICAgICAgdmFyIHZhbHVlID0gbWF0Y2hlc1twb3NpdGlvbl1cbiAgICAgIC8vIG5vIGVtcHR5IHN0cmluZ1xuICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuIHBhcnNlZFxuICAgICAgLy8gbWlsbGlzZWNvbmRzIGFyZSBhY3R1YWxseSBtaWNyb3NlY29uZHMgKHVwIHRvIDYgZGlnaXRzKVxuICAgICAgLy8gd2l0aCBvbWl0dGVkIHRyYWlsaW5nIHplcm9lcy5cbiAgICAgIHZhbHVlID0gcHJvcGVydHkgPT09ICdtaWxsaXNlY29uZHMnXG4gICAgICAgID8gcGFyc2VNaWxsaXNlY29uZHModmFsdWUpXG4gICAgICAgIDogcGFyc2VJbnQodmFsdWUsIDEwKVxuICAgICAgLy8gbm8gemVyb3NcbiAgICAgIGlmICghdmFsdWUpIHJldHVybiBwYXJzZWRcbiAgICAgIGlmIChpc05lZ2F0aXZlICYmIH5uZWdhdGl2ZXMuaW5kZXhPZihwcm9wZXJ0eSkpIHtcbiAgICAgICAgdmFsdWUgKj0gLTFcbiAgICAgIH1cbiAgICAgIHBhcnNlZFtwcm9wZXJ0eV0gPSB2YWx1ZVxuICAgICAgcmV0dXJuIHBhcnNlZFxuICAgIH0sIHt9KVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postgres-interval@1.2.0/node_modules/postgres-interval/index.js\n");

/***/ })

};
;